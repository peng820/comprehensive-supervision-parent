server:
  port: 8081
  servlet:
    context-path: /comprehensive-supervision
spring:
  application:
    name: comprehensive-supervision
  datasource:
    username: root
    password: root
    url: jdbc:mysql://localhost:3306/shiro?useSSL=true&useUnicode=true&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid: # 定义数据库连接处所需要的相关配置项
      initial-Size: 5  # 初始化连接池大小
      min-idle: 5  # 最小维持连接池大小
      max-active: 20 #最大可提供链接数量  你有多少人可以链接 呢么如果现在链接都满的话 就等待
      max-wait: 5000 #等待时间  如果连接池满的话 最长的等待时间
      time-between-eviction-runs-millis: 5000 # 关闭空闲链接间隔 长期不使用的链接(我需要释放)
      min-evictable-idle-time-millis: 30000 #l链接的最小生存时间
      validation-query: SELECT 1 FROM DUAL #数据库的状态的链接检查
      test-while-idle: true # 判断是否为可用链接 拿到一个可用链接之后 在进行一个后续可用处理
      test-on-borrow: false #  在链接前是否需要测试
      test-on-return: false #归还链接前是否要测试
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    timeout: 6000ms
    jedis: # 或lettuce
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
